The Open Closed Principle (OCP) is one of the SOLID principles of object-oriented programming (com.LearningProject.OOP).
It was introduced by Bertrand Meyer and is part of a set of guidelines aimed at making software design more
understandable, flexible, and maintainable.

The Open/Closed Principle states that a class should be open for extension but closed for modification.
In other words, you should be able to extend the behavior of a module without modifying its source code.
This encourages the creation of systems that are easily extensible with new features, yet remain stable and maintainable.

To achieve the Open/Closed Principle, you typically use techniques such as inheritance and interfaces. Instead of
modifying existing code, you create new classes that inherit from or implement existing ones, adding new functionality
without changing the existing code.

This principle contributes to building software that is easier to maintain and less prone to introducing bugs when
changes are made. It promotes a modular and scalable design by allowing the addition of new features through extension
rather than modification.